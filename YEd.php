<?php
require_once 'GraphML.php' ;


/**
 * Deals with the HTML file exported by the yEd editor.
 * 
 * type ImageArea == Map {
 *     "shape"   => 'rect'|'poly',
 *     "coords"  => String!,
 *     "url"     => URL!,
 *     "target"  => String?,
 *     "alt"     => String?,
 *     ...
 *   }  
 * 
 */
class YEdHTML {
  const REGEXPR_AREA_LINE = '#<area shape="([a-z]*)" coords="([0-9,]*)" (href=".*" )?alt="".* onmouseover="showTooltip\(\'(.*)\'\)#' ;
  //  "$D/ -> ../repo
  //  target="_blank"  ->  target="detail"
  
  
  /**
   * 
   * @param HTML $html The html as generated by YEd export function with the format "HTML ImageMap"
   * @return List*(ImageArea)!  
   */
  public static function getImageAreas($html) {
    $areas = array() ;
    preg_match_all(self::REGEXPR_AREA_LINE,$html,$matches,PREG_SET_ORDER) ;
    foreach ($matches as $match) {
      if (preg_match('/href="(.*)"/',$match[3],$urlmatch)) {
        $url=$urlmatch[1] ;
      } else {
        $url="" ;
      }
      $area["shape"]  = $match[1] ;
      $area["coords"] = $match[2] ;
      $area["href"]   = $url ;
      $area["id"]     = $match[4] ;
      $areas[]=$area ;
    }
    return $areas ;
  }
  
  /**
   * Generate a HTML <map> with $mapid as id and with all area defined by the
   * attribute in $imageAreas. Note that attribute 'id' will have their value
   * prefixed by $mapid.'__'
   * @param List*(ImageArea)! $imageAreas
   * @return HTML
   */
  public static function imageAreasAsHTMLMap($mapid,$imageAreas) {
    $out='<map name="'.$mapid.'">'."\n" ;
    foreach($imageAreas as $area) {
      $out .= '  <area' ;
      foreach($area as $attname => $attvalue) {
        if ($attname === "id") {
          $attvalue=$mapid.'__'.$attvalue ;
        }
        $out .= ' '.$attname.'="'.$attvalue.'"' ;
      }
      $out .= " />\n" ;
    }
    $out .= '</map>' ;
    return $out ;
  } 
}




/**
 * Describes a Yed palette.
 * The corresponding file is saved in the user application directory
 * (e.g. C:\Documents and Settings\<theUser>\Application Data\)
 * in the palette directory ((e.g. yWorks\yEd\palette) as a regular
 * graphml file.
 */
class YedPalette extends Graph {

}

/**
 * Describes a Yed palette set.
 * The corresponding file is saved in the user application directory
 * (e.g. C:\Documents and Settings\<theUser>\Application Data\)
 * in the palette directory as palette_info.xml
 */
class YedPaletteSet {


}

class YedPropertyMapper {

}